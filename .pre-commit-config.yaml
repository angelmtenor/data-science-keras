# Pre-commit settings / QA
# Angel Martinez-Tenor. 2022

# Instructions: https://pre-commit.com/
# Manual QA: 'pre-commit run --all-files'
# Update all versions: 'pre-commit autoupdate'
# Advanced QA: pylint src --max-line-length 120. Also: pylint $(git ls-files '*.py') --max-line-length 120


repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    - id: trailing-whitespace
      exclude: ^data/
    - id: mixed-line-ending
      exclude: ^data/
    - id: end-of-file-fixer
      exclude: ^data/
    - id: requirements-txt-fixer
    - id: check-toml
    - id: check-yaml
    - id: check-json
    - id: pretty-format-json
      args: ['--autofix']
    - id: check-merge-conflict
    - id: check-case-conflict
    - id: check-docstring-first
    # - id: check-added-large-files
    #   args: ['--maxkb=2000']

- repo: local
# - repo: https://github.com/psf/black
#   rev: 22.10.0
  hooks:
  - id: black
    name: black
    entry: black
    language: system
    args: ['--line-length=120']
    types: [python]

# - repo: https://github.com/asottile/pyupgrade
#   rev: v3.3.1
  - id: pyupgrade
    name: pyupgrade
    entry: pyupgrade
    language: system
    args: [--py38-plus]
    types: [python]


# - repo: https://github.com/pycqa/isort
#   rev: 5.10.1
  - id: isort
    args: ['--line-length=120', '--profile', 'black']
    name: isort (python)
    entry: isort
    language: system
    types: [python]

    # stages: [commit]

# - repo: https://github.com/pycqa/flake8
#   rev: 6.0.0
  - id: flake8
    name: flake8
    entry: flake8
    language: system
    args: ['--max-line-length=120',
          '--per-file-ignores=__init__.py:F401']
    types: [python]


# - repo: https://github.com/pre-commit/mirrors-mypy
#   rev: 'v0.991'
  - id: mypy
    name: mypy
    entry: mypy
    language: system
    # verbose: true
    args: [--no-strict-optional, --ignore-missing-imports]
    types: [python]

    # additional_dependencies: [tokenize-rt==3.2.0, types-PyYAML]

# - repo: https://github.com/pycqa/pylint
#   rev: 'v2.15.8'
  - id: pylint
    name: pylint
    entry: pylint
    # entry: pylint $(git ls-files '*.py')
    language: system
    types: [python]
    args: [--max-line-length=120,  --disable=E1101, --disable=W0511, --disable=C0103, --disable=C0302,
         --disable=R0912, --disable=R0913, --disable=R0914]
#         # - --ignore-imports=yes
#         # - -d duplicate-code

-   repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
    - id: interrogate
      args: [-vv, -i, --fail-under=90]

# - repo: https://github.com/dosisod/refurb
#   rev: v1.3.0
#   hooks:
#     - id: refurb

# --- JUPYTER NOTEBOOKS ONLY ---

- repo: https://github.com/nbQA-dev/nbQA
  rev: 1.6.3
  hooks:

    - id: nbqa-black
      args: ['--line-length=120']
    # - id: nbqa-isort
    #   args: ['--line-length=120']
    # - id: nbqa-flake8
    #   args: [--max-line-length=120]
    # args: [--nbqa-mutate]

# REMOVE OUTPUT CELLS FROM NOTEBOOKS
# - repo: local
#   hooks:
#   - id: jupyter-nb-clear-output # Note: jupyter_contrib_nbextensions needed
#     name: jupyter-nb-clear-output
#     files: \.ipynb$
#     entry: jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace
#     language: system
#     exclude: ^notebooks/execution_caller.ipynb


# Check cyclical dependencies:
# - repo: https://github.com/tox-dev/pipdeptree
#   hooks:
#   - id: pipdeptree
#     args: ['--warn', 'fail']
